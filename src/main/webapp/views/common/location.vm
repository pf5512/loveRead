#if($!WxConfig)	
<script type="text/javascript">
	$(document).ready(function(){
		if(window.wx){
			var wxConfig = $!WxConfig;
			$.extend(
				wxConfig,{
				    debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
				    timestamp: $!timestamp,
				    jsApiList: ['openLocation','getLocation'] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2
			});
			wx.config(wxConfig);
			
			wx.ready(function(){
			    wx.checkJsApi({
				    jsApiList: ['openLocation','getLocation'], // 需要检测的JS接口列表，所有JS接口列表见附录2,
				    success: function(res) {
				        // 以键值对的形式返回，可用的api值true，不可用为false
				        // 如：{"checkResult":{"chooseImage":true},"errMsg":"checkJsApi:ok"}
				    }
				});
				
				if(areaId == null || areaId == ''){
					var target = $("#areaSelect");
					if(target != null && target.length){
						target.html("定位中<i></i>");
					}
					
					//定位超时标志
					var locationFlag = true;
					//设置定位超时处理
					locationTimeOut = setTimeout(function(){
						$("#area").trigger('change');
						locationFlag = false;
					},5000);
					
					wx.getLocation({
					    type: 'gcj02', // 默认为wgs84的gps坐标，如果要返回直接给openLocation用的火星坐标，可传入'gcj02'
					    success: function (res) {
					        var latitude = res.latitude; // 纬度，浮点数，范围为90 ~ -90
					        var longitude = res.longitude; // 经度，浮点数，范围为180 ~ -180。
					        
					        if(locationFlag){
					        	clearTimeout(locationTimeOut);
								getTencentLocation(latitude, longitude);
							}
					    },
					    cancel: function (res) {
					    	// 选中第一个
					    	locationFlag = false;
							$("#area").trigger('change');
					        zzrw.alert('用户拒绝授权获取地理位置');
					    }
					});
				}
			});
			
			wx.error(function(res){
				// zzrw.alert("服务器配置有误，请稍后");
			    // config信息验证失败会执行error函数，如签名过期导致验证失败，具体错误信息可以打开config的debug模式查看，也可以在返回的res参数中查看，对于SPA可以在这里更新签名。
			});
		}
	});
	
	//调用腾讯地图定位
	//接口详情http://lbs.qq.com/tool/component-geolocation.html
	//需要引入JS文件
	//<script type="text/javascript" src="https://3gimg.qq.com/lightmap/components/geolocation/geolocation.min.js"></script>
	//精确定位，该定位可定位到街道级别，但定位时间长，且需要带有GPS的设备支持（浏览器定位失败几率大）
	function qqMapLocation(){
		//新建定位对象，该对象只需要创建1次
		//new qq.maps.Geolocation(key,refer)  KEY值为QQMAP申请的KEY，refer为应用名称可随意填；两个字段都是必填
		var geolocation = new qq.maps.Geolocation("M46BZ-T6NW4-QYXUN-X5526-FWEZE-WDBJ3", "upwxs-rit");
		//获取定位
		geolocation.getLocation(
			//定位成功函数
			function(position){
				//PC浏览器定位时不是精准定位，只能获取到城市一级
				var nation = position.nation; //国家
				var district = position.district; //行政区
				var city = position.city; //城市
				var province = position.province; //省
				var adcode = position.adcode; //行政区ID 6位
				var lat = position.lat; // 纬度
				var lng = position.lng; // 经度
				var accuracy = position.accuracy; //误差，单位米
				var addr = position.addr;
				//TO DO
			},
			//定位失败函数
			function(){
				zzrw.alert("定位失败");
				//TO DO
			},
			//配置超时时间,默认10秒，可不填
			{timeout:10}
		);
	}
	
	//粗略定位，城市级别，该定位速度快
	function qqMapIpLocation(){
		var geolocation = new qq.maps.Geolocation("M46BZ-T6NW4-QYXUN-X5526-FWEZE-WDBJ3", "upwxs-rit");
		geolocation.getIpLocation(function(position){
			var city = position.city;
			var province = position.province;
			zzrw.alert("粗略定位:"+city+";"+province+";"+position.addr);
		},function(){zzrw.alert("定位失败2");});
	}
</script>
#end