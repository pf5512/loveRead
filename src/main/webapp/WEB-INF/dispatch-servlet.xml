<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
           http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/mvc     http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
           http://www.springframework.org/schema/tx 	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<context:component-scan base-package="com.unionpay.loveRead"/>
	<mvc:resources mapping="/resources/**" location="/resources/"
		cache-period="86400" />

	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- <aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy> -->

	<!-- 拦截器配置 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.unionpay.loveRead.interceptor.GlobalInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>

   <!-- 启用spring mvc 注解 -->
    <mvc:annotation-driven>
        <!-- 启动JSON格式的配置 -->
        <mvc:message-converters>
            <!-- 这里也可以自己定制class -->
            <bean id="jsonConverter"
                class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"><!-- 这里也可以自己定制class -->
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value><!-- 避免IE出现下载JSON文件的情况 -->
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

	<!-- View resolvers can also be configured with ResourceBundles or XML files. 
		If you need different view resolving based on Locale, you have to use the 
		resource bundle resolver. -->

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">

		<property name="cache" value="false" />
		<!--是否缓存模板 -->
		<property name="prefix" value="" />
		<property name="suffix" value=".vm" />
		<!-- 是否支持HTTP 1.0协议 -->
		<property name="redirectHttp10Compatible" value="false" />
		<property name="dateToolAttribute" value="date" /><!-- 日期函数名称 -->
		<property name="numberToolAttribute" value="number" /><!--数字函数名称 -->
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<!--是否使用spring对宏定义的支持 -->
		<property name="exposeRequestAttributes" value="true" />
		<!--是否开放request属性 -->
		<property name="requestContextAttribute" value="rc" />
		<!--request属性引用名称 -->
		<property name="exposeSessionAttributes" value="true"></property>
		<property name="allowSessionOverride" value="true" />
		<!--允许session覆盖旧值 VelocityViewResolver配置 -->
		<property name="allowRequestOverride" value="true"></property>
		<!--指定layout文件 -->
		<property name="layoutUrl" value="layout/default.vm" />
	</bean>

	<!-- 上传文件拦截，设置最大上传文件大小 10M=10*1024*1024(B)=10485760 bytes -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10485760" />
	</bean>
</beans>